<div class="basket-container">
  {{#each orderItems as |orderItem| }}
  <div class="order-item" id='order{{orderItem.id}}'>
    <img src="/product-images/{{orderItem.product.imgurl}}" alt="{{orderItem.product.product_name}}">
    <div>
      <p>Product Name: {{orderItem.product.product_name}}</p>
      <p>Unit Price: £{{orderItem.product.price}}</p>
      <p>Quantity: {{orderItem.quantity}}</p>
      <p>Confirmed: {{orderItem.confirmed}}</p>
      <button id='delete{{orderItem.id}}' onClick="handleDelete({{orderItem.id}})">Delete</button>
    </div>      
  </div>
  {{/each}}
  <p id="totalText">Total value: £{{totalValue}}</p>

  <div class="form-group">
    <label for="addressText">Address for delivery: </label>
    <input type="text" id="addressText"/>
  </div>

  <button id="enterDetailsBtn" onClick="checkoutFunc({{user_id}})">Checkout</button>
</div>

<script> 

  async function checkoutFunc(id) {

    const address = document.querySelector('#addressText').value;

    try {

      await fetch(`/api/users/${id}`, {
        method: 'PUT',
        body: JSON.stringify({
          address: address,
        }),
        headers: { 'Content-Type': 'application/json' },
      });

      const response_order = await fetch(`/api/orderItems/users/${id}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      });

      const orderItems = await response_order.json();

      const stockStatus = checkStock(orderItems);

      if (stockStatus.stockIsEnough) {
        const response = await fetch('/create-checkout-session', {
          method: 'POST',
          body: JSON.stringify(orderItems),
          headers: { 'Content-Type': 'application/json' },
        })

        const { url } = await response.json();
        window.location = url;
      } else {
        alert(stockStatus.message);
      }

      
    } catch (error) {
      console.error(error)
    }
    
  }

  async function handleDelete(id) {

    const response_order = await fetch(`/api/orderItems/${id}`, {
      method: 'GET',
      headers: {'Content-Type': 'application/json'}
    });

    const item = await response_order.json();

    console.log(item);

    const price = item.product.price;

    const quantity = item.quantity;

    const response_user = await fetch(`/api/users/${item.user_id}`, {  
      method: 'GET',
      headers: {'Content-Type': 'application/json'}
    })

    const userInfo = await response_user.json();

    console.log(userInfo);

    const totalValue = userInfo.totalValue;    
    console.log(totalValue);
    const newTotal = totalValue - price * quantity;
    console.log(newTotal);

    await fetch(`/api/users/${item.user_id}`, {  
      method: 'PUT',
      body: JSON.stringify({
        totalValue: newTotal,
      }),
      headers: {'Content-Type': 'application/json'},
    })
    
    await fetch(`/api/orderItems/${id}`, {
      method: 'DELETE',
      headers: {'Content-Type': 'application/json'},
    })
    
    document.querySelector(`#order${id}`).style.display = 'none';
    document.querySelector(`#totalText`).textContent = `Total value: £${totalValue - price * quantity}`
  }

  function checkStock(orders) {
    var message = '';
    var isSuccess = true;

    orders.forEach((order) => {
      if (order.quantity > order.product.stock) {
        message += `Not enough stock! Only ${order.product.stock} ${order.product.product_name} left.\n`;
        isSuccess = false;
      }
    })

    if (isSuccess) {
      message = 'All the orders have enough stock!'
    }

    return {
      message: message,
      stockIsEnough: isSuccess,
    }
  }

</script>

